{"version":3,"file":"static/js/699.20312108.chunk.js","mappings":"qTAGaA,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpBC,EACND,EADMC,YAAaC,EACnBF,EADmBE,aAAcC,EACjCH,EADiCG,MAAOC,EACxCJ,EADwCI,SAAUC,EAClDL,EADkDK,OAAQC,EAC1DN,EAD0DM,aAG5D,OACE,iCACE,yBACGL,GACC,gBACEM,MAAO,IACPC,IAAG,yCAAoCP,GACvCQ,IAAI,YAGN,gBAAKF,MAAO,IAAKC,IAAG,UAAKE,GAAWD,IAAI,gBAI5C,4BACE,0BACGN,EADH,IACWG,IAAgB,gCAAQA,EAAaK,MAAM,EAAG,GAA9B,WAE3B,wCAAgBC,KAAKC,MAAsB,IAAfX,EAAsB,IAAlD,QACA,sCACA,uBAAIE,KACJ,mCACCC,IACC,wBACGA,EAAOS,KAAI,SAAAC,GAAK,OACf,wBAAoBA,EAAMC,MAAjBD,EAAME,gBCnBhBC,EAAmB,WAAO,IAAD,IAC5BC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAEjB,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACED,GAAW,GADb,mBAGuBE,EAAAA,EAAAA,IAAYZ,GAHnC,OAGUa,EAHV,OAIIP,EAAYO,GAJhB,gDAMIL,EAAS,EAAD,IANZ,yBAQIE,GAAW,GARf,6EADc,uBAAC,WAAD,wBAYdI,KACC,CAACd,KAGF,gCACGO,IAAS,0DAAkCA,EAAMQ,WACjDN,IAAW,SAACO,EAAA,EAAD,KACZ,UAAC,KAAD,CAAMC,GAAE,iBAAEf,QAAF,IAAEA,GAAF,UAAEA,EAAUgB,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,IAAnC,WACE,SAAC,MAAD,IADF,eAIA,SAACvC,EAAD,CAAaC,SAAUwB,KAEvB,4BACE,kDACA,2BACE,yBACE,SAAC,KAAD,CAASY,GAAI,OAAb,qBAEF,yBACE,SAAC,KAAD,CAASA,GAAI,UAAb,8BAIN,SAAC,KAAD","sources":["components/FilmDetails/FilmDetails.jsx","Views/MovieDetailsPage.jsx"],"sourcesContent":["import baseImg from '../../images/no-poster1.png';\nimport PropTypes from 'prop-types';\n\nexport const FilmDetails = ({ filmData }) => {\n  const { poster_path, vote_average, title, overview, genres, release_date } =\n    filmData;\n\n  return (\n    <>\n      <div>\n        {poster_path ? (\n          <img\n            width={250}\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt=\"poster\"\n          />\n        ) : (\n          <img width={250} src={`${baseImg}`} alt=\"no_image\" />\n        )}\n      </div>\n\n      <div>\n        <h1>\n          {title} {release_date && <span>({release_date.slice(0, 4)})</span>}\n        </h1>\n        <p>User score: {Math.round((vote_average * 100) / 10)}%</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h2>Genres</h2>\n        {genres && (\n          <ul>\n            {genres.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </>\n  );\n};\n\nFilmDetails.propTypes = {\n  filmData: PropTypes.object.isRequired,\n};\n","import {\n  useParams,\n  Link,\n  NavLink,\n  useLocation,\n  Outlet,\n} from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { getFilmById } from '../helpers/fetch-beckend';\nimport { IoArrowUndoOutline } from 'react-icons/io5';\nimport { FilmDetails } from '../components/FilmDetails/FilmDetails';\n\nexport const MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const [filmItem, setFilmItem] = useState({});\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchItem() {\n      setLoading(true);\n      try {\n        const data = await getFilmById(movieId);\n        setFilmItem(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchItem();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <p>Whoops, something went wrong: {error.message}</p>}\n      {loading && <Loader />}\n      <Link to={location?.state?.from ?? '/'}>\n        <IoArrowUndoOutline /> Go back\n      </Link>\n\n      <FilmDetails filmData={filmItem} />\n\n      <div>\n        <p>Aditional information</p>\n        <ul>\n          <li>\n            <NavLink to={'cast'}>Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to={'reviews'}>Reviews</NavLink>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </>\n  );\n};\n"],"names":["FilmDetails","filmData","poster_path","vote_average","title","overview","genres","release_date","width","src","alt","baseImg","slice","Math","round","map","genre","name","id","MovieDetailsPage","movieId","useParams","location","useLocation","useState","filmItem","setFilmItem","error","setError","loading","setLoading","useEffect","getFilmById","data","fetchItem","message","Loader","to","state","from"],"sourceRoot":""}