{"version":3,"file":"static/js/456.ea4146bb.chunk.js","mappings":"qUAEaA,EAAUC,EAAAA,GAAAA,IAAH,0CAIPC,EAAaD,EAAAA,GAAAA,IAAH,gFAOVE,EAAYF,EAAAA,GAAAA,IAAH,4E,SCTTG,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpBC,EACND,EADMC,YAAaC,EACnBF,EADmBE,aAAcC,EACjCH,EADiCG,MAAOC,EACxCJ,EADwCI,SAAUC,EAClDL,EADkDK,OAAQC,EAC1DN,EAD0DM,aAG5D,OACE,UAACX,EAAD,YACE,SAACE,EAAD,UACGI,GACC,gBACEM,IAAG,yCAAoCN,GACvCO,IAAI,YAGN,gBAAKD,IAAG,UAAKE,GAAWD,IAAI,gBAIhC,UAACV,EAAD,YACE,0BACGK,EADH,IACWG,IAAgB,gCAAQA,EAAaI,MAAM,EAAG,GAA9B,WAE3B,wCAAgBC,KAAKC,MAAsB,IAAfV,EAAsB,IAAlD,QACA,sCACA,uBAAIE,IAEHC,IACC,iCACE,oCACA,wBACGA,EAAOQ,KAAI,SAAAC,GAAK,OACf,wBAAoBA,EAAMC,MAAjBD,EAAME,mBCrBlBC,EAAmB,WAAO,IAAD,QAC5BC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAEjB,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACED,GAAW,GADb,mBAGuBE,EAAAA,EAAAA,IAAYZ,GAHnC,OAGUa,EAHV,OAIIP,EAAYO,GAJhB,gDAMIL,EAAS,EAAD,IANZ,yBAQIE,GAAW,GARf,6EADc,uBAAC,WAAD,wBAYdI,KACC,CAACd,KAGF,gCACGO,IAAS,0DAAkCA,EAAMQ,WACjDN,IAAW,SAACO,EAAA,EAAD,KACZ,UAAC,KAAD,CACEC,GAAE,iBAAEf,QAAF,IAAEA,GAAF,UAAEA,EAAUgB,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,IAC7BC,MAAO,CACLC,aAAc,QACdC,QAAS,SAJb,WAOE,SAAC,MAAD,IAPF,eAUA,SAACzC,EAAD,CAAaC,SAAUuB,KAEvB,4BACE,kDACA,2BACE,yBACE,SAAC,KAAD,CAASY,GAAI,OAAQC,MAAO,CAAEC,KAAI,OAAEjB,QAAF,IAAEA,GAAF,UAAEA,EAAUgB,aAAZ,aAAE,EAAiBC,MAArD,qBAIF,yBACE,SAAC,KAAD,CAASF,GAAI,UAAWC,MAAO,CAAEC,KAAI,OAAEjB,QAAF,IAAEA,GAAF,UAAEA,EAAUgB,aAAZ,aAAE,EAAiBC,MAAxD,8BAON,SAAC,KAAD","sources":["components/FilmDetails/FilmDetails.styled.jsx","components/FilmDetails/FilmDetails.jsx","Views/MovieDetailsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n`;\n\nexport const WrapperImg = styled.div`\n  margin-right: 30px;\n  img {\n    width: 250px;\n  }\n`;\n\nexport const Container = styled.div`\n  h1,\n  h2,\n  p {\n    margin-bottom: 15px;\n  }\n`;\n","import baseImg from '../../images/no-poster1.png';\nimport PropTypes from 'prop-types';\nimport { Wrapper, WrapperImg, Container } from './FilmDetails.styled';\n\nexport const FilmDetails = ({ filmData }) => {\n  const { poster_path, vote_average, title, overview, genres, release_date } =\n    filmData;\n\n  return (\n    <Wrapper>\n      <WrapperImg>\n        {poster_path ? (\n          <img\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt=\"poster\"\n          />\n        ) : (\n          <img src={`${baseImg}`} alt=\"no_image\" />\n        )}\n      </WrapperImg>\n\n      <Container>\n        <h1>\n          {title} {release_date && <span>({release_date.slice(0, 4)})</span>}\n        </h1>\n        <p>User score: {Math.round((vote_average * 100) / 10)}%</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n\n        {genres && (\n          <>\n            <h2>Genres</h2>\n            <ul>\n              {genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </ul>\n          </>\n        )}\n      </Container>\n    </Wrapper>\n  );\n};\n\nFilmDetails.propTypes = {\n  filmData: PropTypes.object.isRequired,\n};\n","import {\n  useParams,\n  Link,\n  NavLink,\n  useLocation,\n  Outlet,\n} from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { getFilmById } from '../helpers/fetch-beckend';\nimport { IoArrowUndoOutline } from 'react-icons/io5';\nimport { FilmDetails } from '../components/FilmDetails/FilmDetails';\n\nexport const MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const [filmItem, setFilmItem] = useState({});\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchItem() {\n      setLoading(true);\n      try {\n        const data = await getFilmById(movieId);\n        setFilmItem(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchItem();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <p>Whoops, something went wrong: {error.message}</p>}\n      {loading && <Loader />}\n      <Link\n        to={location?.state?.from ?? '/'}\n        style={{\n          marginBottom: '16px ',\n          display: 'block',\n        }}\n      >\n        <IoArrowUndoOutline /> Go back\n      </Link>\n\n      <FilmDetails filmData={filmItem} />\n\n      <div>\n        <p>Aditional information</p>\n        <ul>\n          <li>\n            <NavLink to={'cast'} state={{ from: location?.state?.from }}>\n              Cast\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to={'reviews'} state={{ from: location?.state?.from }}>\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n\n      <Outlet />\n    </>\n  );\n};\n"],"names":["Wrapper","styled","WrapperImg","Container","FilmDetails","filmData","poster_path","vote_average","title","overview","genres","release_date","src","alt","baseImg","slice","Math","round","map","genre","name","id","MovieDetailsPage","movieId","useParams","location","useLocation","useState","filmItem","setFilmItem","error","setError","loading","setLoading","useEffect","getFilmById","data","fetchItem","message","Loader","to","state","from","style","marginBottom","display"],"sourceRoot":""}